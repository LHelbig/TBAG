<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QByRXhpZgAATU0AKgAAAAgAAQEOAAIAAABPAAAAGgAAAABBIHBh
        dGh3YXkgYmV0d2VlbiB0cmVlcyBsZWFkaW5nIGludG8gYSBkYXJrIGFuZCBtaXN0eSBmb3Jlc3QuIFBo
        b3RvIENvbXBvc2l0ZS4AAP/bAEMABQMEBAQDBQQEBAUFBQYHDAgHBwcHDwsLCQwRDxISEQ8RERMWHBcT
        FBoVEREYIRgaHR0fHx8TFyIkIh4kHB4fHv/bAEMBBQUFBwYHDggIDh4UERQeHh4eHh4eHh4eHh4eHh4e
        Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHv/AABEIAHcAqgMBEQACEQEDEQH/xAAfAAAB
        BQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYT
        UWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK
        0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEK
        FiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T1
        9vf4+fr/2gAMAwEAAhEDEQA/APkHU+Sv1Naz3MqZUXgg5xg9ags9SFwkE7MAM5Nehex4vLdHK+Obprn7
        NnsXP/oNc9d3sduEjy3MTTfmu4lOSN6/zrKO501PhZ0Vype8dug4/lXU9zki/dOj8Lxfu5eM8j+tbQOW
        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
</value>
  </data>
</root>